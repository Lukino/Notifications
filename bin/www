#!/usr/bin/env node
'use strict';

var app = require('../app.js'),
    debug = require('debug')('Notifications:server'),
    http = require('http'),
    mongoose = require('mongoose'),
    utils = require('../utils.js'),
    config = require('../config/config.js');

var port = utils.normalizePort(config.server.port);
app.set('port', port);

var server = http.createServer(app);
server.listen(port);

global.socket = require('socket.io')(server);

server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);

    mongoose.connect(config.database.connectionUrl);
    var db = mongoose.connection;
    db.on('error', console.error.bind(console, 'DB connection error ...'));
    db.once('open', function callback() {
        console.log('Notifications DB opened');
    });
}
